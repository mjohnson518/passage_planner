{
  "description": "Cloudflare WAF Rules for Passage Planner",
  "rules": [
    {
      "name": "Block Common Attack Patterns",
      "expression": "(cf.threat_score > 40) or (http.request.uri.query contains \"<script\") or (http.request.uri.query contains \"SELECT\") or (http.request.uri.query contains \"UNION\") or (http.request.uri.query contains \"../\") or (http.request.uri.query contains \"..\\\\\")",
      "action": "block",
      "priority": 1
    },
    {
      "name": "Rate Limit API Endpoints",
      "expression": "(http.request.uri.path contains \"/api/\") and not (http.request.uri.path eq \"/api/stripe/webhook\")",
      "action": "challenge",
      "rateLimit": {
        "threshold": 100,
        "period": 60,
        "action": "challenge"
      },
      "priority": 2
    },
    {
      "name": "Strict Rate Limit Auth Endpoints",
      "expression": "(http.request.uri.path eq \"/api/auth/login\") or (http.request.uri.path eq \"/api/auth/signup\")",
      "action": "challenge",
      "rateLimit": {
        "threshold": 10,
        "period": 300,
        "action": "block"
      },
      "priority": 3
    },
    {
      "name": "Block Known Bad IPs",
      "expression": "(ip.src in $bad_ips)",
      "action": "block",
      "priority": 4
    },
    {
      "name": "Challenge Suspicious User Agents",
      "expression": "(http.user_agent contains \"bot\") and not (http.user_agent contains \"googlebot\") and not (http.user_agent contains \"bingbot\")",
      "action": "challenge",
      "priority": 5
    },
    {
      "name": "Block SQL Injection Attempts",
      "expression": "(http.request.uri.query contains \"' OR \") or (http.request.uri.query contains \"'; DROP\") or (http.request.body.raw contains \"' OR \") or (http.request.body.raw contains \"'; DROP\")",
      "action": "block",
      "priority": 6
    },
    {
      "name": "Block XSS Attempts",
      "expression": "(http.request.uri.query contains \"<iframe\") or (http.request.uri.query contains \"javascript:\") or (http.request.body.raw contains \"<iframe\") or (http.request.body.raw contains \"javascript:\")",
      "action": "block",
      "priority": 7
    },
    {
      "name": "Protect Admin Endpoints",
      "expression": "(http.request.uri.path contains \"/admin\") and not (ip.src in $admin_ips)",
      "action": "block",
      "priority": 8
    },
    {
      "name": "Block Large Requests",
      "expression": "(http.request.body.size > 10485760)",
      "action": "block",
      "priority": 9
    },
    {
      "name": "Challenge Non-Standard Methods",
      "expression": "not http.request.method in {\"GET\" \"POST\" \"PUT\" \"DELETE\" \"OPTIONS\" \"HEAD\"}",
      "action": "challenge",
      "priority": 10
    },
    {
      "name": "Geographic Restrictions",
      "expression": "(ip.geoip.country in {\"XX\" \"YY\"}) and not (ip.src in $allowed_ips)",
      "action": "block",
      "priority": 11,
      "note": "Replace XX, YY with actual country codes if needed"
    },
    {
      "name": "Block Directory Traversal",
      "expression": "(http.request.uri.path contains \"..\" and http.request.uri.path contains \"/\") or (http.request.uri.path contains \"..\\\\\") or (http.request.uri.query contains \"..\" and http.request.uri.query contains \"/\")",
      "action": "block",
      "priority": 12
    },
    {
      "name": "Protect Sensitive Files",
      "expression": "(http.request.uri.path contains \".env\") or (http.request.uri.path contains \".git\") or (http.request.uri.path contains \".DS_Store\") or (http.request.uri.path contains \"wp-config\")",
      "action": "block",
      "priority": 13
    },
    {
      "name": "Block Command Injection",
      "expression": "(http.request.uri.query contains \";\") and ((http.request.uri.query contains \"cat \") or (http.request.uri.query contains \"ls \") or (http.request.uri.query contains \"rm \"))",
      "action": "block",
      "priority": 14
    },
    {
      "name": "OWASP Core Rule Set",
      "expression": "(cf.waf.score.sqli > 5) or (cf.waf.score.xss > 5) or (cf.waf.score.rce > 5)",
      "action": "block",
      "priority": 15,
      "note": "Enable Cloudflare OWASP Core Rule Set"
    }
  ],
  "customLists": {
    "bad_ips": {
      "description": "Known malicious IP addresses",
      "values": []
    },
    "admin_ips": {
      "description": "Allowed admin IP addresses",
      "values": []
    },
    "allowed_ips": {
      "description": "Whitelisted IP addresses",
      "values": []
    }
  },
  "pageRules": [
    {
      "url": "*.passageplanner.com/api/*",
      "settings": {
        "security_level": "high",
        "browser_check": "on",
        "challenge_ttl": 14400,
        "always_use_https": "on"
      }
    },
    {
      "url": "*.passageplanner.com/api/auth/*",
      "settings": {
        "security_level": "under_attack",
        "browser_check": "on",
        "challenge_ttl": 1800
      }
    }
  ],
  "firewallSettings": {
    "security_level": "medium",
    "challenge_threshold": 30,
    "browser_integrity_check": true,
    "privacy_pass": true,
    "always_use_https": true,
    "min_tls_version": "1.2",
    "opportunistic_encryption": true,
    "automatic_https_rewrites": true,
    "mirage": true,
    "polish": "lossless",
    "websockets": true,
    "ip_geolocation": true,
    "email_obfuscation": true,
    "server_side_exclude": true,
    "hotlink_protection": true
  },
  "ddosProtection": {
    "enabled": true,
    "sensitivity": "high",
    "advanced_tcp_protection": true
  },
  "botManagement": {
    "enabled": true,
    "fight_mode": true,
    "verified_bots": {
      "google": "allow",
      "bing": "allow",
      "baidu": "challenge",
      "yandex": "challenge",
      "other": "challenge"
    }
  },
  "headers": {
    "transform_rules": [
      {
        "name": "Add Security Headers",
        "headers": {
          "X-Content-Type-Options": "nosniff",
          "X-Frame-Options": "DENY",
          "Referrer-Policy": "strict-origin-when-cross-origin",
          "Permissions-Policy": "geolocation=(self), microphone=(), camera=()"
        }
      },
      {
        "name": "Remove Server Headers",
        "remove": ["Server", "X-Powered-By", "X-AspNet-Version"]
      }
    ]
  }
} 